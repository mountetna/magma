#!/usr/bin/env bash

function _magma_completions() {
  _magma_inner_completions "${COMP_WORDS[@]:1:COMP_CWORD}"
}

function _magma_inner_completions() {
  local all_flag_completion_names=''
  local string_flag_completion_names=''
  local all_completion_names=''
  local i=''
  local a=''

all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names="console create_db generate_completion_script global_migrate help load load_project migrate plan unload"
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ "$1" == "console" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "create_db" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__project_name__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "generate_completion_script" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "global_migrate" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names --version "
string_flag_completion_names="$string_flag_completion_names --version "
declare _completions_for_version="__version__"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "help" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "load" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "load_project" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__project_name__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__file_name__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "migrate" ]]; then
shift
all_flag_completion_names="$all_flag_completion_names --version "
string_flag_completion_names="$string_flag_completion_names --version "
declare _completions_for_version="__version__"
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "plan" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__project_name__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ "$1" == "unload" ]]; then
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__project_name__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
if [[ "$#" == "1" ]];  then
all_completion_names="__model_name__"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
all_flag_completion_names="$all_flag_completion_names  "
string_flag_completion_names="$string_flag_completion_names  "
while [[ "$#" != "0" ]]; do
if [[ "$#" == "1" ]];  then
all_completion_names=""
all_completion_names="$all_completion_names $all_flag_completion_names"
if [[ -z "$(echo $all_completion_names | xargs)" ]]; then
return
fi
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
return
elif [[ -z "$(echo $all_flag_completion_names | xargs)" ]]; then
return
elif [[ "$all_flag_completion_names" =~ $1\  ]]; then
all_flag_completion_names="${all_flag_completion_names//$1\ /}"
a=$1
shift
if [[ "$string_flag_completion_names" =~ $a\  ]]; then
if [[ "$#" == "1" ]];  then
a="${a//--/}"
a="${a//-/_}"
i="_completions_for_$a"
all_completion_names="${!i}"
COMPREPLY=($(compgen -W "$all_completion_names" -- "$1"))
return
fi
shift
fi
else
return
fi
done
}

complete -o default -F _magma_completions magma

